:root {
    /** Layout **/
    --max-width: 1200px;

    /** Colors **/
    --color-background: #1A1A2E;
    --color-text: #EAEAEA;
    --color-wall: #000814;
    --color-cell: #F9C74F;
    --color-start: #90BE6D;
    --color-end: #F94144;
    --color-end-2: #F9844A;
    --color-clicked: #C77DFF;
    --color-hover: #3DB2A2;
    --color-solution: #F9844A;
    --color-accent1: #00BFFF;
    --color-accent2: #FF4DFF;

    /** Font Sizes **/
    --font-size-md: 16px;
    --font-size-lg: 20px;
    --font-size-ex-lg: 24px;

    /** Font Weights **/
    --font-weight-regular: 400;
    --font-weight-bold: 700;

    /** Maze **/
    --rows: 15;
    --cols: 15;
}

/** Body Styles **/
body {
    max-width: var(--max-width);
    justify-content: center;
    text-align: center;
    margin: 0 auto;

    background-color: var(--color-background);
    color: var(--color-text);

    font-family: "Montserrat", sans-serif;
    font-optical-sizing: auto;
    font-size: var(--font-size-md);
    font-weight: var(--font-weight-bold);
    font-style: normal;

    transition: all 0.3s ease;
}

/** Maze Container Styles **/
.maze-container {

    display: grid;
    grid-template-rows: repeat(var(--rows), 1fr);
    grid-template-columns: repeat(var(--cols), 1fr);
    position: relative;

    width: var(--maze-width);
    height: var(--maze-height);
    max-width: 500px;
    max-height: 500px;
    margin: 0 auto;
    margin-top: 25px;

    background-color: var(--color-background);
    border: 2px solid var(--color-wall);
    border-radius: 5px;

    transition: all 0.3s ease;


}

/* Animation Played after maze is created */
.maze-container.finish {
    animation: glow 1s ease-in-out;
    animation-delay: 0.5s;
}

/* Animation played when maze is solved */
.maze-container.solved::before {

    content: "";
    position: absolute;

    width: calc(var(--maze-width) + 8px);
    height: calc(var(--maze-height) + 8px);
    top: -4px;
    left: -4px;
    border-radius: 3px;

    background: linear-gradient(270deg,
            var(--color-accent1),
            var(--color-accent2),
            #7A80FF,
            var(--color-accent2),
            var(--color-accent1));
    background-size: 300% 300%;
    filter: blur(5px);
    opacity: 1;
    z-index: -1;

    animation: glowShift 8s linear infinite;

    transition: opacity 0.4s ease;
}

/*
Animation played when user tries to check if the
maze is solved when it is not
*/
.maze-container.unsolved {
    animation: backtrackAnimation 0.3s ease-in;
}

/** Cell Styles **/
.cell {
    background-color: var(--color-background);
    border: 1px solid var(--color-wall);

    cursor: crosshair;

    transition: all 0.3s ease;
    transition: filter 1.2s ease-out;
}

/* First cell(Starting cell) style */
.cell.start {
    background-color: var(--color-start) !important;
    animation: lighter-glow 2s linear infinite !important;
}

/* Last cell(Ending cell) style */
.cell.end {
    background-color: var(--color-end) !important;
    animation: strong-glow 2s linear infinite !important;
}

/* 
Visited cell style
Animation played after cell is visited by algorithm 
to create a "pop" effect 
*/
.cell.visited {
    animation: cellPop 0.3s ease-out;
    background-color: var(--color-cell);
}

/* Animation played during backtracking */
.cell.backtrack {
    animation: backtrackAnimation 0.3s ease-in forwards;
}

/* 
Animation Played during showing solution
Looks like flowing water 
*/
.cell.solution {
    background-color: var(--color-cell);
    animation: solutionReveal 1s linear forwards;
    animation-delay: calc(var(--anim-delay) * 0.05s);
}

/* Style for clicked cell */
.cell.clicked {
    background-color: var(--color-clicked) !important;
}

/* class to override background-color of clicked cell */
.cell.solution.clicked {
    background-color: var(--color-solution) !important;
}

/* Hover effect for cells */
.cell:hover {
    filter: brightness(1.4);
    background-color: var(--color-hover) !important;
    transition: all 0.2s ease;

}

/** Animations **/
/* Glowing animation for start cell */
@keyframes lighter-glow {
    0% {
        filter: brightness(1);
    }

    50% {
        filter: brightness(1.2);
    }

    100% {
        filter: brightness(1);
    }
}

/* Glowing animation for end cell */
@keyframes strong-glow {
    0% {
        filter: brightness(1);
    }

    50% {
        filter: brightness(1.6);
    }

    100% {
        filter: brightness(1);
    }
}

/* Appearing animation for visited cell */
@keyframes cellPop {
    0% {
        transform: scale(0.2);
        background-color: var(--color-wall);
        opacity: 0;
    }

    60% {
        transform: scale(1.1);
        background-color: var(--color-cell);
        opacity: 1;
    }

    100% {
        transform: scale(1);
        background-color: var(--color-cell);
    }
}

/* Hard wiggle while backtracking from a dead end */
@keyframes backtrackAnimation {

    0% {
        background-color: var(--color-cell);
        transform: scale(1);
    }

    25% {
        background-color: var(--color-end);
        transform: translateX(-5px);
    }

    50% {
        background-color: var(--color-end-2);
        transform: translateX(5px);
    }

    100% {
        background-color: var(--color-cell);
        transform: scale(1);
    }

}

/* Glowing animation for MAze container played after maze is generated */
@keyframes glow {

    0% {
        filter: brightness(1);
    }

    50% {
        filter: brightness(1.4);
    }

    100% {
        filter: brightness(1);
    }
}

/* Flowing water like animation for revealing solution */
@keyframes solutionReveal {
    0% {
        background-color: var(--color-cell);
    }

    100% {
        background-color: var(--color-solution);
    }
}

/* Glowing border animation for solving the maze */
@keyframes glowShift {
    0% {
        background-position: 0% 50%;
    }

    100% {
        background-position: 300% 50%;
    }
}

/** Input Container Styles **/
.input-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
    width: 500px;
    margin: 30px auto;
}

.input-row {
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
    justify-content: center;
}

.input-row span {
    width: 70px;
    text-align: right;
}

.input-row input[type="range"] {
    flex: 1;
}

.input-row input[type="text"] {
    width: 50px;
    text-align: left;
}

.button-row {
    margin-top: 20px;
    display: flex;
    gap: 50px;
}

input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 10px;

    background: linear-gradient(to right, var(--color-accent1), var(--color-accent2));
    background-size: 120% 100%;
    background-position: left;
    border-radius: 5px;
    outline: none;

    transition: all 0.6s ease;
}

input[type="range"]:hover {
    background-position: right;
}

input[type="range"]::-moz-range-thumb {
    width: 10px;
    height: 10px;

    background: var(--color-text);
    border-radius: 50%;
    border: 2px solid var(--color-accent1);

    cursor: pointer;

    transition: all 0.3s ease;
}

input[type='range']::-moz-range-thumb:hover {
    transform: scale(1.5);
}

input[type="text"] {
    width: 50px;

    background-color: #00000000;
    color: var(--color-text);
    border: none;
    outline: none;

    font-family: "Montserrat", sans-serif;
    font-size: var(--font-size-md);
    font-optical-sizing: auto;
    font-weight: var(--font-weight-bold);
    font-style: normal;
}

.button {
    background: linear-gradient(to right, var(--color-accent1), var(--color-accent2));
    background-size: 150% 100%;
    background-position: left;
    color: var(--color-text);
    padding: 10px 20px;
    border: none;
    border-radius: 5px;

    font-family: "Montserrat", sans-serif;
    font-optical-sizing: auto;
    font-weight: var(--font-weight-bold);
    font-style: normal;

    transition: all 0.6s ease-in-out;
}

.button:hover {
    background-position: right;

    cursor: pointer;
}